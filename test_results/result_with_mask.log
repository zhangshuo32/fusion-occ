nohup: ignoring input
/root/occ/BEVDet/mmdet3d/models/backbones/swin.py:772: UserWarning: DeprecationWarning: pretrained is a deprecated, please use "init_cfg" instead
  warnings.warn('DeprecationWarning: pretrained is a deprecated, '
[                                                  ] 0/6019, elapsed: 0s, ETA:/root/occ/BEVDet/mmdet3d/datasets/pipelines/loading.py:1630: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272068694/work/torch/csrc/utils/tensor_new.cpp:201.)
  gt_boxes, gt_labels = torch.Tensor(gt_boxes), torch.tensor(gt_labels)
/root/occ/BEVDet/mmdet3d/datasets/pipelines/loading.py:1630: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272068694/work/torch/csrc/utils/tensor_new.cpp:201.)
  gt_boxes, gt_labels = torch.Tensor(gt_boxes), torch.tensor(gt_labels)
/root/occ/BEVDet/mmdet3d/datasets/pipelines/loading.py:1630: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272068694/work/torch/csrc/utils/tensor_new.cpp:201.)
  gt_boxes, gt_labels = torch.Tensor(gt_boxes), torch.tensor(gt_labels)
/root/occ/BEVDet/mmdet3d/datasets/pipelines/loading.py:1630: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  /opt/conda/conda-bld/pytorch_1634272068694/work/torch/csrc/utils/tensor_new.cpp:201.)
  gt_boxes, gt_labels = torch.Tensor(gt_boxes), torch.tensor(gt_labels)
/root/anaconda3/envs/occ/lib/python3.8/site-packages/torch/utils/checkpoint.py:25: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn("None of the inputs have requires_grad=True. Gradients will be None")
/root/occ/BEVDet/mmdet3d/models/necks/view_transformer.py:219: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  ranks_depth = torch.range(
/root/occ/BEVDet/mmdet3d/models/necks/view_transformer.py:221: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  ranks_feat = torch.range(
/root/occ/BEVDet/mmdet3d/models/necks/view_transformer.py:229: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  batch_idx = torch.range(0, B - 1).reshape(B, 1). \

hist:  [[5.10080000e+04 1.45500000e+03 1.78300000e+03 0.00000000e+00
  7.23700000e+03 1.56400000e+03 7.00000000e+01 1.60600000e+03
  2.52000000e+02 5.10300000e+03 5.11000000e+02 4.19600000e+03
  1.12100000e+03 2.47400000e+03 7.54300000e+03 9.60030000e+04
  9.48700000e+03 2.77440000e+04]
 [8.47000000e+02 3.27075000e+05 1.20000000e+02 5.00000000e+00
  2.16000000e+02 3.84000000e+02 3.00000000e+00 3.98000000e+02
  2.88400000e+03 7.90000000e+01 1.03000000e+02 7.95800000e+03
  1.08700000e+03 4.09700000e+03 4.75100000e+03 3.51360000e+04
  3.03500000e+03 2.36860000e+04]
 [1.07700000e+03 7.80000000e+01 2.08140000e+04 0.00000000e+00
  1.24000000e+02 0.00000000e+00 2.52000000e+02 1.81500000e+03
  1.50000000e+01 0.00000000e+00 2.40000000e+01 5.19000000e+02
  3.00000000e+00 9.99000000e+02 8.32000000e+02 2.62800000e+03
  1.67000000e+03 5.50700000e+03]
 [0.00000000e+00 3.00000000e+00 0.00000000e+00 4.95002000e+05
  3.62500000e+03 1.31000000e+02 0.00000000e+00 7.40000000e+01
  0.00000000e+00 8.70000000e+01 3.90900000e+03 1.76130000e+04
  7.00000000e+00 5.12000000e+02 3.80000000e+02 3.21300000e+03
  1.57500000e+03 7.98350000e+04]
 [5.10000000e+02 2.41000000e+02 2.60000000e+01 8.40500000e+03
  2.76136400e+06 2.00000000e+00 5.12000000e+02 7.57000000e+02
  1.03000000e+02 2.52000000e+02 7.11870000e+04 1.32544000e+05
  6.51000000e+02 4.91100000e+03 5.07200000e+03 1.38640000e+04
  6.02600000e+03 3.52951000e+05]
 [6.50000000e+01 8.78000000e+02 0.00000000e+00 1.57000000e+02
  4.26000000e+02 6.87920000e+04 0.00000000e+00 5.80000000e+01
  5.35000000e+02 2.88300000e+03 1.05790000e+04 3.58100000e+03
  3.80000000e+01 5.44000000e+02 2.04500000e+03 1.61360000e+04
  5.07500000e+03 1.65450000e+04]
 [5.00000000e+02 1.70000000e+01 1.80000000e+02 1.00000000e+00
  1.84900000e+03 0.00000000e+00 3.40150000e+04 7.95000000e+02
  1.00000000e+00 0.00000000e+00 1.85000000e+02 3.61400000e+03
  1.00000000e+01 6.64000000e+02 3.25000000e+02 1.52500000e+03
  6.27000000e+02 1.04730000e+04]
 [4.67000000e+02 2.20000000e+02 2.69000000e+02 3.60000000e+01
  1.10400000e+03 6.70000000e+01 2.39000000e+02 2.73682000e+05
  1.06000000e+02 0.00000000e+00 5.46000000e+02 6.07600000e+03
  3.34000000e+02 1.02000000e+04 1.99000000e+03 1.86640000e+04
  3.92900000e+03 6.55500000e+04]
 [1.83000000e+02 2.39100000e+03 1.09000000e+02 0.00000000e+00
  7.70000000e+01 8.30000000e+01 1.00000000e+00 1.94000000e+02
  5.83990000e+04 9.70000000e+01 1.41000000e+02 3.05000000e+03
  6.81000000e+02 1.25200000e+03 8.34000000e+02 8.38200000e+03
  3.06000000e+02 7.38600000e+03]
 [2.00000000e+01 1.98000000e+02 0.00000000e+00 1.26500000e+03
  4.51000000e+02 1.39200000e+03 0.00000000e+00 0.00000000e+00
  2.27000000e+02 2.51100000e+05 3.21320000e+04 9.29700000e+03
  2.43000000e+02 2.76000000e+02 3.88000000e+02 2.02560000e+04
  1.15800000e+03 2.81590000e+04]
 [1.00000000e+00 1.97000000e+02 0.00000000e+00 6.27400000e+03
  5.71460000e+04 1.56810000e+04 5.80000000e+01 3.69000000e+02
  1.77000000e+02 6.24140000e+04 9.72016000e+05 3.50240000e+04
  2.46000000e+02 1.73900000e+03 1.15600000e+03 2.14180000e+04
  2.76600000e+03 1.31454000e+05]
 [3.13300000e+03 1.66700000e+04 5.33000000e+02 1.65080000e+04
  1.77706000e+05 3.70300000e+03 3.38100000e+03 6.63600000e+03
  5.88500000e+03 4.27100000e+03 4.49460000e+04 3.57744460e+07
  1.51307000e+05 8.84276000e+05 6.41053000e+05 1.21688000e+05
  2.14930000e+04 6.50154000e+05]
 [2.20000000e+02 1.37100000e+03 3.00000000e+00 9.40000000e+01
  1.87700000e+03 9.95000000e+02 1.20000000e+01 3.72000000e+02
  1.21100000e+03 9.84000000e+02 5.94000000e+02 2.12013000e+05
  8.26176000e+05 6.94380000e+04 8.91960000e+04 2.55330000e+04
  8.51200000e+03 5.10180000e+04]
 [5.63900000e+03 9.50400000e+03 1.37900000e+03 1.15600000e+03
  6.99900000e+03 5.50000000e+01 2.56000000e+02 1.20280000e+04
  1.53300000e+03 5.10000000e+01 2.07300000e+03 8.48316000e+05
  4.31710000e+04 8.92166400e+06 1.16510100e+06 3.20318000e+05
  8.50920000e+04 3.74017000e+05]
 [5.55300000e+03 1.19610000e+04 1.04500000e+03 9.27000000e+02
  5.63900000e+03 2.53700000e+03 5.80000000e+02 2.13500000e+03
  1.28300000e+03 3.11000000e+02 9.15000000e+02 5.15509000e+05
  6.68840000e+04 9.43960000e+05 1.18443380e+07 2.58138000e+05
  4.62353000e+05 5.62394000e+05]
 [3.65860000e+04 3.72920000e+04 2.04600000e+03 7.14000000e+02
  1.33380000e+04 5.28400000e+03 8.40000000e+02 1.51880000e+04
  1.02970000e+04 9.87800000e+03 4.27900000e+03 7.70540000e+04
  2.87740000e+04 2.12219000e+05 2.10422000e+05 1.99631000e+07
  6.14380000e+05 1.64274400e+06]
 [6.85700000e+03 4.61400000e+03 7.89000000e+02 3.22000000e+02
  3.77600000e+03 6.62000000e+02 3.11000000e+02 3.74100000e+03
  3.78000000e+02 1.73000000e+02 8.01000000e+02 1.54480000e+04
  5.46600000e+03 6.32910000e+04 3.66145000e+05 5.31198000e+05
  2.17080290e+07 2.48881600e+06]
 [1.81470000e+04 2.39020000e+04 3.62500000e+03 1.34321000e+05
  5.29639000e+05 2.06750000e+04 7.19600000e+03 7.99100000e+04
  8.87800000e+03 3.96090000e+04 2.08924000e+05 1.09582900e+06
  6.96060000e+04 4.76369000e+05 1.02239300e+06 2.78746300e+06
  3.74498600e+06 4.04633207e+08]]

===> per class IoU of 6019 samples:
===> others - IoU = 17.06
===> barrier - IoU = 62.56
===> bicycle - IoU = 43.13
===> bus - IoU = 63.78
===> car - IoU = 66.21
===> construction_vehicle - IoU = 37.89
===> motorcycle - IoU = 49.66
===> pedestrian - IoU = 53.71
===> traffic_cone - IoU = 49.77
===> trailer - IoU = 53.11
===> truck - IoU = 57.52
===> driveable_surface - IoU = 86.17
===> other_flat - IoU = 49.79
===> sidewalk - IoU = 61.63
===> terrain - IoU = 65.06
===> manmade - IoU = 73.49
===> vegetation - IoU = 71.94
===> free - IoU = 96.02

===> per class IoU of 6019 samples:
===> others - IoU = 17.06
===> barrier - IoU = 62.56
===> bicycle - IoU = 43.13
===> bus - IoU = 63.78
===> car - IoU = 66.21
===> construction_vehicle - IoU = 37.89
===> motorcycle - IoU = 49.66
===> pedestrian - IoU = 53.71
===> traffic_cone - IoU = 49.77
===> trailer - IoU = 53.11
===> truck - IoU = 57.52
===> driveable_surface - IoU = 86.17
===> other_flat - IoU = 49.79
===> sidewalk - IoU = 61.63
===> terrain - IoU = 65.06
===> manmade - IoU = 73.49
===> vegetation - IoU = 71.94
===> mIoU of 6019 samples: 56.62
use mask  True
(['others', 'barrier', 'bicycle', 'bus', 'car', 'construction_vehicle', 'motorcycle', 'pedestrian', 'traffic_cone', 'trailer', 'truck', 'driveable_surface', 'other_flat', 'sidewalk', 'terrain', 'manmade', 'vegetation', 'free'], array([0.170617  , 0.62555465, 0.43125311, 0.63776507, 0.66210122,
       0.37891073, 0.49662734, 0.53710002, 0.49772865, 0.53114305,
       0.5751625 , 0.86171445, 0.49792195, 0.61632545, 0.65057018,
       0.73485612, 0.71944528, 0.96015903]), 6019)
